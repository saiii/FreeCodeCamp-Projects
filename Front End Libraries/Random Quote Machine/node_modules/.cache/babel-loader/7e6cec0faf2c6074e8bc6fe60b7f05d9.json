{"ast":null,"code":"var _jsxFileName = \"/Users/maxjunerd/Desktop/web-development/FreeCodeCamp/Front End Libraries/Random Quote Machine/src/Quotes/Quotes.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: null,\n      color: null,\n      randomNumber: null\n    };\n\n    this.randomhandler = () => {\n      this.setState({\n        randomNumber: Math.floor(Math.random() * this.state.quotes.length)\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\").then(response => {\n      this.setState({\n        quotes: response.data.quotes\n      });\n    });\n  }\n\n  render() {\n    let quote = React.createElement(\"p\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Loading\");\n    let author = React.createElement(\"p\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading\");\n\n    if (this.state.quotes) {\n      quote = React.createElement(\"p\", {\n        id: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.state.quotes[0].quote);\n      author = React.createElement(\"p\", {\n        id: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.quotes[0].author);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, quote, author);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maxjunerd/Desktop/web-development/FreeCodeCamp/Front End Libraries/Random Quote Machine/src/Quotes/Quotes.js"],"names":["React","axios","App","Component","state","quotes","color","randomNumber","randomhandler","setState","Math","floor","random","length","componentDidMount","get","then","response","data","render","quote","author"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,YAAY,EAAE;AAHR,KADwB;;AAAA,SAehCC,aAfgC,GAehB,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAEG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKR,KAAL,CAAWC,MAAX,CAAkBQ,MAA7C;AAAf,OAAd;AACD,KAjB+B;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,KAAK,CAACc,GAAN,CACE,wIADF,EAGCC,IAHD,CAGMC,QAAQ,IAAI;AAChB,WAAKR,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAEY,QAAQ,CAACC,IAAT,CAAcb;AAAvB,OAAd;AACD,KALD;AAMD;;AAKDc,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG;AAAG,MAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;AACA,QAAIC,MAAM,GAAG;AAAG,MAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb;;AACA,QAAI,KAAKjB,KAAL,CAAWC,MAAf,EAAuB;AACrBe,MAAAA,KAAK,GAAG;AAAG,QAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKhB,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBe,KAAnC,CAAR;AACAC,MAAAA,MAAM,GAAG;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAKjB,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBgB,MAArC,CAAT;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,EAEGC,MAFH,CADF;AAMD;;AAhC+B;;AAmClC,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    quotes: null,\n    color: null,\n    randomNumber: null\n  };\n\n  componentDidMount() {\n    axios.get(\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n    )\n    .then(response => {\n      this.setState({quotes: response.data.quotes});\n    });\n  }\n  randomhandler = () => {\n    this.setState({randomNumber: Math.floor(Math.random() * this.state.quotes.length)});\n  }\n\n  render() {\n    let quote = <p id='text'>Loading</p>;\n    let author = <p id='author'>Loading</p>;\n    if (this.state.quotes) {\n      quote = <p id='text'>{this.state.quotes[0].quote}</p>\n      author = <p id='author'>{this.state.quotes[0].author}</p>\n    }\n    return (\n      <div>\n        {quote}\n        {author}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}